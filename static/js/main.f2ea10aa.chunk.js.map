{"version":3,"sources":["App.jsx","index.jsx"],"names":["goodsFromServer","SORT_BY_ALPHABET","SORT_BY_LENGTH","App","useState","sortBy","setSortBy","reverse","setReverse","visibleGoods","goods","preparedGoods","sort","good1","good2","localeCompare","length","getPreparedGoods","className","type","cn","onClick","map","good","ReactDOM","render","document","getElementById"],"mappings":"iPAMaA,EAAkB,CAC7B,YACA,SACA,OACA,YACA,QACA,QACA,OACA,QACA,MACA,UAGIC,EAAmB,WACnBC,EAAiB,SA2BhB,IAAMC,EAAM,WACjB,MAA4BC,mBAAS,IAArC,mBAAOC,EAAP,KAAeC,EAAf,KACA,EAA8BF,oBAAS,GAAvC,mBAAOG,EAAP,KAAgBC,EAAhB,KAEMC,EA7BR,SAA0BC,EAA1B,GAAuD,IAApBL,EAAmB,EAAnBA,OAAQE,EAAW,EAAXA,QACnCI,EAAa,YAAOD,GAqB1B,OAnBIL,GACFM,EAAcC,MAAK,SAACC,EAAOC,GACzB,OAAQT,GACN,KAAKJ,EACH,OAAOY,EAAME,cAAcD,GAE7B,KAAKZ,EACH,OAAOW,EAAMG,OAASF,EAAME,OAE9B,QACE,OAAO,MAKXT,GACFI,EAAcJ,UAGTI,EAOcM,CAAiBjB,EAAiB,CAAEK,SAAQE,YAMjE,OACE,sBAAKW,UAAU,kBAAf,UACE,sBAAKA,UAAU,UAAf,UACE,wBACEC,KAAK,SACLD,UAAWE,IAAG,iBAAkB,CAC9B,WAAYf,IAAWJ,IAEzBoB,QAAS,kBAAMf,EAAUL,IAL3B,iCAUA,wBACEkB,KAAK,SACLD,UAAWE,IAAG,oBAAqB,CACjC,WAAYf,IAAWH,IAEzBmB,QAAS,kBAAMf,EAAUJ,IAL3B,4BAUA,wBACEiB,KAAK,SACLD,UAAWE,IAAG,qBAAsB,CAClC,YAAab,IAEfc,QAAS,kBAAMb,GAAYD,IAL7B,sBAUEF,GAAUE,IACV,wBACEY,KAAK,SACLD,UAAU,4BACVG,QA1CU,WAClBf,EAAU,IACVE,GAAW,IAqCL,sBAUJ,6BACGC,EAAaa,KAAI,SAAAC,GAAI,OACpB,oBAEE,UAAQ,OAFV,SAIGA,GAHIA,YCrGjBC,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.f2ea10aa.chunk.js","sourcesContent":["import 'bulma/css/bulma.css';\nimport './App.scss';\n\nimport React, { useState } from 'react';\nimport cn from 'classnames';\n\nexport const goodsFromServer = [\n  'Dumplings',\n  'Carrot',\n  'Eggs',\n  'Ice cream',\n  'Apple',\n  'Bread',\n  'Fish',\n  'Honey',\n  'Jam',\n  'Garlic',\n];\n\nconst SORT_BY_ALPHABET = 'alphabet';\nconst SORT_BY_LENGTH = 'length';\n\nfunction getPreparedGoods(goods, { sortBy, reverse }) {\n  const preparedGoods = [...goods];\n\n  if (sortBy) {\n    preparedGoods.sort((good1, good2) => {\n      switch (sortBy) {\n        case SORT_BY_ALPHABET:\n          return good1.localeCompare(good2);\n\n        case SORT_BY_LENGTH:\n          return good1.length - good2.length;\n\n        default:\n          return 0;\n      }\n    });\n  }\n\n  if (reverse) {\n    preparedGoods.reverse();\n  }\n\n  return preparedGoods;\n}\n\nexport const App = () => {\n  const [sortBy, setSortBy] = useState('');\n  const [reverse, setReverse] = useState(false);\n\n  const visibleGoods = getPreparedGoods(goodsFromServer, { sortBy, reverse });\n  const cancelReset = () => {\n    setSortBy('');\n    setReverse(false);\n  };\n\n  return (\n    <div className=\"section content\">\n      <div className=\"buttons\">\n        <button\n          type=\"button\"\n          className={cn('button is-info', {\n            'is-light': sortBy !== SORT_BY_ALPHABET,\n          })}\n          onClick={() => setSortBy(SORT_BY_ALPHABET)}\n        >\n          Sort alphabetically\n        </button>\n\n        <button\n          type=\"button\"\n          className={cn('button is-success', {\n            'is-light': sortBy !== SORT_BY_LENGTH,\n          })}\n          onClick={() => setSortBy(SORT_BY_LENGTH)}\n        >\n          Sort by length\n        </button>\n\n        <button\n          type=\"button\"\n          className={cn('button is-warning ', {\n            'is-light': !reverse,\n          })}\n          onClick={() => setReverse(!reverse)}\n        >\n          Reverse\n        </button>\n\n        {(sortBy || reverse) && (\n          <button\n            type=\"button\"\n            className=\"button is-danger is-light\"\n            onClick={cancelReset}\n          >\n            Reset\n          </button>\n        )}\n      </div>\n\n      <ul>\n        {visibleGoods.map(good => (\n          <li\n            key={good}\n            data-cy=\"Good\"\n          >\n            {good}\n          </li>\n        ))}\n      </ul>\n    </div>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}